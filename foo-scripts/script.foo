-- Identity function with polymorphic type
let identity x = x
-- Equivalent to expression below using lambda
let identity = (\x -> x)

let fst a b = a

let snd a b = b

-- To create recursive functions add rec keyword after let.
let rec fib n = 
    if (n == 1) then 
        1
    else 
        if (n == 2) then 
            2
        else 
            (fib (n - 1)) + (fib (n - 2)) 


